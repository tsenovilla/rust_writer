// SPDX-License-Identifier: GPL-3.0

use rust_writer_procedural::mutator;
use rust_writer::ast::mutator::{ToMutate, Mutator, EmptyMutator};

#[derive(Debug)]
struct A;

impl<'a> ToMutate<'a, A, 1> for Mutator<'_, EmptyMutator, 1> {
	fn to_mutate(self, mutator: &'a A) -> Mutator<'a, A, 1> {
		Mutator { mutated: self.mutated, mutator }
	}
}

// Note: Just a toy trait with a method called visit_file_mut so the only errors generated by this
// UI test are related to A not being Clone
trait ToyTrait{
    fn visit_file_mut(&mut self, _file: &mut syn::File);
}

impl ToyTrait for Mutator<'_, A, 1>{
    fn visit_file_mut(&mut self, _file: &mut syn::File){}
}

#[mutator(rust_writer::ast::implementors::ItemToTrait<'a>, A)]
struct SomeStruct; 

fn main(){}
