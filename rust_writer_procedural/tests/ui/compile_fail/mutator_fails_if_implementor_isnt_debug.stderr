error[E0277]: `A` doesn't implement `Debug`
 --> tests/ui/compile_fail/mutator_fails_if_implementor_isnt_debug.rs:9:10
  |
9 | impl<'a> ToMutate<'a, A, 1> for Mutator<'_, EmptyMutator, 1> {
  |          ^^^^^^^^^^^^^^^^^^ `A` cannot be formatted using `{:?}`
  |
  = help: the trait `Debug` is not implemented for `A`
  = note: add `#[derive(Debug)]` to `A` or manually `impl Debug for A`
note: required by a bound in `ToMutate`
 --> $WORKSPACE/rust_writer/src/ast/mutator.rs
  |
  | pub trait ToMutate<'a, T: Debug + Clone, const N: usize> {
  |                           ^^^^^ required by this bound in `ToMutate`
help: consider annotating `A` with `#[derive(Debug)]`
  |
7  + #[derive(Debug)]
8  | struct A;
   |

error[E0277]: `A` doesn't implement `Debug`
  --> tests/ui/compile_fail/mutator_fails_if_implementor_isnt_debug.rs:21:19
   |
21 | impl ToyTrait for Mutator<'_, A, 1>{
   |                   ^^^^^^^^^^^^^^^^^ `A` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `A`
   = note: add `#[derive(Debug)]` to `A` or manually `impl Debug for A`
note: required by a bound in `Mutator`
  --> $WORKSPACE/rust_writer/src/ast/mutator.rs
   |
   | pub struct Mutator<'a, T: Debug + Clone, const N: usize> {
   |                           ^^^^^ required by this bound in `Mutator`
help: consider annotating `A` with `#[derive(Debug)]`
   |
7  + #[derive(Debug)]
8  | struct A;
   |

error[E0277]: `A` doesn't implement `Debug`
  --> tests/ui/compile_fail/mutator_fails_if_implementor_isnt_debug.rs:10:40
   |
10 |     fn to_mutate(self, mutator: &'a A) -> Mutator<'a, A, 1> {
   |                                           ^^^^^^^^^^^^^^^^^ `A` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `A`
   = note: add `#[derive(Debug)]` to `A` or manually `impl Debug for A`
note: required by a bound in `Mutator`
  --> $WORKSPACE/rust_writer/src/ast/mutator.rs
   |
   | pub struct Mutator<'a, T: Debug + Clone, const N: usize> {
   |                           ^^^^^ required by this bound in `Mutator`
help: consider annotating `A` with `#[derive(Debug)]`
   |
7  + #[derive(Debug)]
8  | struct A;
   |

error[E0277]: `A` doesn't implement `Debug`
  --> tests/ui/compile_fail/mutator_fails_if_implementor_isnt_debug.rs:22:28
   |
22 |     fn visit_file_mut(&mut self, _file: &mut syn::File){}
   |                            ^^^^ `A` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `A`
   = note: add `#[derive(Debug)]` to `A` or manually `impl Debug for A`
note: required by a bound in `Mutator`
  --> $WORKSPACE/rust_writer/src/ast/mutator.rs
   |
   | pub struct Mutator<'a, T: Debug + Clone, const N: usize> {
   |                           ^^^^^ required by this bound in `Mutator`
help: consider annotating `A` with `#[derive(Debug)]`
   |
7  + #[derive(Debug)]
8  | struct A;
   |

error[E0277]: `A` doesn't implement `Debug`
  --> tests/ui/compile_fail/mutator_fails_if_implementor_isnt_debug.rs:11:36
   |
11 |         Mutator { mutated: self.mutated, mutator }
   |                                          ^^^^^^^ `A` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `A`
   = note: add `#[derive(Debug)]` to `A` or manually `impl Debug for A`
note: required by a bound in `Mutator`
  --> $WORKSPACE/rust_writer/src/ast/mutator.rs
   |
   | pub struct Mutator<'a, T: Debug + Clone, const N: usize> {
   |                           ^^^^^ required by this bound in `Mutator`
help: consider annotating `A` with `#[derive(Debug)]`
   |
7  + #[derive(Debug)]
8  | struct A;
   |

error[E0277]: `A` doesn't implement `Debug`
  --> tests/ui/compile_fail/mutator_fails_if_implementor_isnt_debug.rs:25:1
   |
25 | #[mutator(rust_writer::ast::implementors::ItemToTrait<'a>, A)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `A` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `A`
   = note: add `#[derive(Debug)]` to `A` or manually `impl Debug for A`
   = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `A` with `#[derive(Debug)]`
   |
7  + #[derive(Debug)]
8  | struct A;
   |

error[E0277]: `A` doesn't implement `Debug`
  --> tests/ui/compile_fail/mutator_fails_if_implementor_isnt_debug.rs:25:1
   |
25 | #[mutator(rust_writer::ast::implementors::ItemToTrait<'a>, A)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `A` cannot be formatted using `{:?}`
   |
   = help: the trait `Debug` is not implemented for `A`
   = note: add `#[derive(Debug)]` to `A` or manually `impl Debug for A`
note: required by a bound in `to_mutate`
  --> $WORKSPACE/rust_writer/src/ast/mutator.rs
   |
   | pub trait ToMutate<'a, T: Debug + Clone, const N: usize> {
   |                           ^^^^^ required by this bound in `ToMutate::to_mutate`
   |     fn to_mutate(self, mutator: &'a T) -> Mutator<'a, T, N>;
   |        --------- required by a bound in this associated function
   = note: this error originates in the attribute macro `mutator` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `A` with `#[derive(Debug)]`
   |
7  + #[derive(Debug)]
8  | struct A;
   |
